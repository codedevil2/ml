import numpy as np
import matplotlib.pyplot as plt
from sklearn.kernel_ridge import KernelRidge

# Generate sample data
x = np.random.rand(100)
y = 2 * x + 3 + np.random.randn(100)

# Define and fit LWR model
sigma_values = [0.1, 1.0, 10.0]  # Different values of sigma (kernel width)
plt.figure(figsize=(12, 10))

for sigma in sigma_values:
    krr = KernelRidge(kernel='polynomial', alpha=0.1, degree=20, gamma=1/(2*sigma**2))
    krr.fit(x[:, np.newaxis], y)

    # Plot original data points
    plt.scatter(x, y, label='Original Data')

    # Plot regression lines for different values of sigma
    target_x_range = np.linspace(x.min(), x.max(), 100)
    y_pred = krr.predict(target_x_range[:, np.newaxis])
    plt.plot(target_x_range, y_pred, label=f"sigma={sigma}")

# Add labels and title
plt.xlabel("X")
plt.ylabel("Y")
plt.title("Kernel Ridge Regression with Different Kernel Widths")

# Add legend
plt.legend()

# Display the plot
plt.show()
